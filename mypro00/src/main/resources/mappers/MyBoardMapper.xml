<?xml version="1.0" encoding="UTF-8"?><!-- MyBatis가 사용할 xml -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- SQL문들은 <mapper> 사이에 해당 문장 유형의 요소를 사용하여 정의함
     <mapper>의 namespace 속성 : 
	 - 매퍼-인터페이스를 사용하는 경우, 매퍼-인터페이스의 패키지이름이 포함된 전체이름
	 - DAO 클래스를 사용하는 경우, 관례적으로 확장자를 제거한 매퍼 파일이름만 설정 -->

<mapper namespace="com.spring5legacy.mypro00.mapper.MyBoardMapper">
<!-- 각 문장 유형 요소의 id 속성의 값은, 해당 문장을 호출하는 Mapper-인터페이스의 메써드 이름과 동일해야 함 -->

	<!-- <select id="selectMyBoard" resultType="com.spring5legacy.mypro00.domain.MyBoardVO">' : SELECT문 -->
	<!-- <insert id="insertMyBoard" parameterType="com.spring5legacy.mypro00.domain.MyBoardVO">' : INSERT문 -->
	<!-- <update id="updateMyBoard" parameterType="com.spring5legacy.mypro00.domain.MyBoardVO">' : UPDATE문 -->
	<!-- <delete id="deleteMyBoard" parameterType="com.spring5legacy.mypro00.domain.MyBoardVO">' : DELETE문 -->
	
	<!-- resultType : 반환값이 있을 때; 그 외 : parameterType -->	<!-- parameterType 생략? -->
	<!-- `태그` 내부에 세미콜론(;) X -->
	
	<!-- #{`필드`} : `필드` 값을 인터페이스로 전송 -->
	<!-- $ : statement객체를 사용해 문장 처리; # : preparedstatement객체를 사용 -->

<!-- 게시물 목록 조회 -->
<!-- 	<select id="selectMyBoardList" resultType="com.spring5legacy.mypro00.domain.MyBoardVO">
		SELECT bno, btitle, bwriter, bregDate, bmodDate, bviewsCnt, breplyCnt, bdelFlag
			FROM myuser.tbl_myboard
	   		ORDER BY bno DESC
	</select> -->
		
<!-- 게시물 목록 조회: 페이징 --><!-- 
	<select id="selectMyBoardList" resultType="com.spring5legacy.mypro00.domain.MyBoardVO">
		<![CDATA[
			SELECT b.bno, b.btitle, b.bwriter, b.bregDate, b.bmodDate, b.bviewsCnt, b.breplyCnt, b.bdelFlag
				FROM(SELECT /*+ INDEX_DESC (a pk_myboard) */ ROWNUM rn, a.*
						FROM myuser.tbl_myboard a
						WHERE ROWNUM <= (#{pageNum} * #{rowAmountPerPage})
				) b
				WHERE b.rn >= ((#{pageNum} * #{rowAmountPerPage}) - (#{rowAmountPerPage} - 1)) 
		]]>
	</select> -->
	
<!-- 게시물 목록 조회: 검색 페이징 후 -->
	<select id="selectMyBoardList" resultType="com.spring5legacy.mypro00.domain.MyBoardVO">
		<![CDATA[
			SELECT b.bno, b.btitle, b.bwriter, b.bregDate, b.bmodDate, b.bviewsCnt, b.breplyCnt, b.bdelFlag
			FROM(SELECT /*+ INDEX_DESC (a pk_myboard) */ ROWNUM rn, a.*
			     FROM myuser.tbl_myboard a
			     WHERE  
	    ]]>
			    <choose>
					<when test='scope == "T".toString()'>
					   btitle LIKE '%' || #{keyword} || '%' AND
					</when>
					<when test='scope == "C".toString()'>
					   bcontent LIKE '%' || #{keyword} || '%' AND
					</when>
					<when test='scope == "W".toString()'>
					   bwriter LIKE '%' || #{keyword} || '%' AND 
					</when>
					<when test="scope == 'TC'.toString()">
					   (btitle LIKE '%' || #{keyword} || '%' OR bcontent LIKE '%' || #{keyword} || '%') AND 
					</when>
				</choose>
				<if test="(beginDate != null and beginDate != '') and (endDate != null and endDate != '')">
				       <![CDATA[
				       (bregDate >= TO_DATE(#{beginDate}, 'YYYY-MM-DD') AND bregDate < (TO_DATE(#{endDate}, 'YYYY-MM-DD')+1)) AND
				       ]]>
				</if>
	    <![CDATA[
			           ROWNUM <= (#{pageNum} * #{rowAmountPerPage})	 
	    			 ) b
			WHERE b.rn >= ((#{pageNum} * #{rowAmountPerPage}) - (#{rowAmountPerPage} - 1)) 
		]]>
	</select>

<!-- 위의 SELECT 동적 구문은 아래처럼 작성될 수도 있습니다. -->	

	<select id="selectMyBoardList2"   resultType="com.spring5legacy.mypro00.domain.MyBoardVO">
	<![CDATA[
	    SELECT bno, btitle, bcontent, bwriter, bregdate, bmodDate, bviewsCnt, breplyCnt, bdelFlag
	    FROM ( SELECT /*+ INDEX_DESC (a pk_myboard) */ ROWNUM rn, a.*
	            FROM  myuser.tbl_myboard a
	            WHERE 
	]]>
	<trim prefix="(" suffix=") AND" prefixOverrides="OR">
	    <foreach item='scope' collection="scopeArray">
	        <trim prefix="OR">
	            <choose>
	                <when test="scope == 'T'.toString()">btitle LIKE '%'||#{keyword}||'%'</when>
	                <when test="scope == 'C'.toString()">bcontent LIKE '%'||#{keyword}||'%'</when>
	                <when test="scope == 'W'.toString()">bwriter LIKE '%'||#{keyword}||'%'</when>
	            </choose>
	        </trim>
	    </foreach>
	</trim>
	<![CDATA[
	            	       ROWNUM <= ( #{pageNum} * #{rowAmountPerPage} )
	         )
	    WHERE rn >= ( ( #{pageNum} * #{rowAmountPerPage} ) - ( #{rowAmountPerPage} - 1 ) )
	]]>
	</select>

<!-- 마이바티스 동적 태그 개요 및 실습 --><!-- 
	<select id="selectMyBoardList" resultType="com.spring5legacy.mypro00.domain.MyBoardVO">
		SELECT *
		FROM myuser.tbl_myboard
		<if test="scope == null">
			<where>
			        rownum = 1 
			</where>
        </if>
        <if test="scope != null">		
		<where>
			<choose>
			<when test='scope == "T".toString()'>
			   btitle LIKE '%' || '5' || '%' AND rownum = 1 
			</when>
			<when test='scope == "C".toString()'>
			   bcontent LIKE '%' || '2' || '%' AND rownum = 1
			</when>
			<when test='scope == "W".toString()'>
			   bwriter LIKE '%' || '3' || '%' AND rownum = 1
			</when>
			<when test="scope == 'TC'.toString()">
			   (btitle LIKE '%' || '4' || '%' OR bcontent LIKE '%' || '4' || '%') AND rownum = 1
			</when>
			<otherwise>
			   rownum = 1
			</otherwise>
			</choose>
		</where> 
	    </if>
	</select>
 -->
<!-- 
SELECT *
FROM myuser.tbl_myboard 
WHERE btitle LIKE '%1%' ;

SELECT *
FROM myuser.tbl_myboard 
WHERE bcontent LIKE '%1%' ;

SELECT *
FROM myuser.tbl_myboard 
WHERE bwriter LIKE '%1%' ;

SELECT *
FROM myuser.tbl_myboard 
WHERE btitle LIKE '%1%' OR bcontent LIKE '%1%';
 -->

	
<!-- 게시물 총 수 -->
	<select id="selectRowTotal" resultType="Long">
		SELECT count(*) FROM myuser.tbl_myboard
		<where>
		<choose>
			<when test='scope == "T".toString()'>
			   btitle LIKE '%' || #{keyword} || '%' 
			</when>
			<when test='scope == "C".toString()'>
			   bcontent LIKE '%' || #{keyword} || '%' 
			</when>
			<when test='scope == "W".toString()'>
			   bwriter LIKE '%' || #{keyword} || '%' 
			</when>
			<when test="scope == 'TC'.toString()">
			   (btitle LIKE '%' || #{keyword} || '%' OR bcontent LIKE '%' || #{keyword} || '%')  
			</when>
		</choose>
		<if test="(beginDate != null and beginDate != '') and (endDate != null and endDate != '')">
		       <![CDATA[
		       AND (bregDate >= TO_DATE(#{beginDate}, 'YYYY-MM-DD') AND bregDate < (TO_DATE(#{endDate}, 'YYYY-MM-DD')+1))
		       ]]>
		</if>
		</where>
	</select>

	<!-- 게시물 총 개수(검색 페이징) -->
	<select id="selectRowTotal2" resultType="Long">
	<![CDATA[
	    SELECT count(*) FROM myuser.tbl_myboard
	]]>
	    <where>
	        <trim prefix="(" suffix=")" prefixOverrides="OR">
	            <foreach item='scope' collection="scopeArray">
	                <trim prefix="OR">
	                    <choose>
	                        <when test="scope == 'T'.toString()">btitle LIKE '%'||#{keyword}||'%'</when>
	                        <when test="scope == 'C'.toString()">bcontent LIKE '%'||#{keyword}||'%'</when>
	                        <when test="scope == 'W'.toString()">bwriter LIKE '%'||#{keyword}||'%'</when>
	                    </choose>
	                </trim>
	            </foreach>
	        </trim>
	    </where>
	</select>

<!-- 게시물 등록 : bno 값은 sequence가 생성한 값을 사용; 사용자 입력값, 기본값을 잘 생각해서 작성 -->
		<!-- selectKey 사용 O -->
	<insert id="insertMyBoard">
		<selectKey keyProperty="bno" order="BEFORE" resultType="Long">
			SELECT myuser.seq_myboard.nextval FROM DUAL
		</selectKey>
		INSERT INTO myuser.tbl_myboard
		    VALUES(#{bno}, #{btitle}, #{bcontent}, #{bwriter}, DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT)
	</insert>
	
		<!-- selectKey 사용 X -->
	<insert id="insertMyBoardNoKey">
		INSERT INTO myuser.tbl_myboard
		    VALUES(myuser.seq_myboard.NEXTVAL, #{btitle}, #{bcontent}, #{bwriter}, DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT)
	</insert>	
	
<!-- 특정 게시물 조회 : 특정 bno를 가지는 게시물 하나의 모든 데이터 조회 --><!-- 
	<select id="selectMyBoard" resultType="com.spring5legacy.mypro00.domain.MyBoardVO">
		SELECT bno, btitle, bcontent, bwriter, bregDate, bmodDate, bviewsCnt, breplyCnt, bdelFlag
		    FROM myuser.tbl_myboard
		    WHERE bno = #{bno}
	</select> -->
	<!-- 특정 게시물 조회(detail.jsp): OUTER JOIN 사용: 첨부파일이 없는 게시물도 결과에 포함되어야 함 -->	
	<!-- 첨부파일 정보 저장하기 위한 resultMap 정의 -->
	<resultMap type="com.spring5legacy.mypro00.domain.MyBoardAttachFileVO" id="attachFileMap">
	    <result property="uuid" column="UUID"/>
	    <result property="uploadPath" column="UPLOADPATH"/>
	    <result property="fileName" column="FILENAME"/>
	    <result property="fileType" column="FILETYPE"/>
	    <result property="fileDelFlag" column="FILEDELFLAG"/>
	</resultMap>
	<!-- 게시물 정보를 저장하기 위한 resultMap 정의 -->
	<resultMap type="com.spring5legacy.mypro00.domain.MyBoardVO" id="myBoardMap">
	    <result property="bno" column="BNO"/>
	    <result property="btitle" column="BTITLE"/>
	    <result property="bcontent" column="BCONTENT"/>
	    <result property="bwriter" column="BWRITER"/>
	    <result property="bregDate" column="BREGDATE"/>
	    <result property="bmodDate" column="BMODDATE"/>
	    <result property="bviewsCnt" column="BVIEWSCNT"/>
	    <result property="breplyCnt" column="BREPLYCNT"/>
	    <result property="bdelFlag" column="BDELFLAG"/>
	    <collection property="attachFileList"  resultMap="attachFileMap" />
	</resultMap>
	<!-- 특정 게시물 조회 : 특정 bno를 가지는 게시물 하나의 모든 데이터 조회 + 첨부파일 정보 포함 -->
	<select id="selectMyBoard" resultMap="myBoardMap">
		SELECT a.BNO, a.BTITLE, a.BCONTENT, a.BWRITER, 
		       a.BREGDATE, a.BMODDATE, a.BVIEWSCNT, a.BREPLYCNT, a.BDELFLAG,
               b.UUID, b.UPLOADPATH, b.FILENAME, b.FILETYPE, b.FILEDELFLAG
          FROM myuser.tbl_myboard a LEFT OUTER JOIN myuser.tbl_myattachFiles b ON (a.bno = b.bno)
         WHERE a.bno = #{bno}
	</select>
	
<!-- 특정 게시물 수정 : 특정 게시물에 대하여 수정 가능한 컬럼에 대해 수정을 처리하는 SQL문 -->
	<update id="updateMyBoard">
		UPDATE myuser.tbl_myboard
		    SET btitle = #{btitle}, 
		        bcontent = #{bcontent}, 
		        bmodDate = DEFAULT
		    WHERE bno = #{bno}
	</update>
	
<!-- 특정 게시물 삭제 (블라인드 처리용) : 특정 bno를 가지는 게시물 하나 블라인드 처리 -->
	<update id="updateBdelFlag">
		UPDATE myuser.tbl_myboard
		    SET bdelFlag = 1
		    WHERE bno = #{bno}
	</update>
	
<!-- 특정 게시물 삭제 (실제 삭제) : 특정 bno를 가지는 게시물 하나 삭제 -->
	<delete id="deleteMyBoard">
		DELETE FROM myuser.tbl_myboard WHERE bno = #{bno}
	</delete>
	
<!-- 특정 게시물 조회수 증가 : 게시물 조회 시 + 1 -->
	<update id="updateBviewsCnt">
		UPDATE myuser.tbl_myboard
			SET bviewsCnt = bviewsCnt + 1
			WHERE bno = #{bno}
	</update>
	
<!-- 특정 게시물의 댓글수 변경: 댓글/답글 등록 시: +1, 댓글/답글 삭제 시: n개 -->
    <update id="updateBreplyCnt">
       UPDATE myuser.tbl_myboard
       SET breplyCnt = breplyCnt + #{amt} 
       WHERE bno =  #{bno}
    </update>	
</mapper>